--ISNULL(check_expr, replacement_value) -> if expr is NULL, replace with value

use pc;
--1
SELECT AVG(SPEED) AS AVG_SPEED
FROM pc

--2
SELECT maker, AVG(SCREEN) AS AVG_SCREEN
FROM LAPTOP L JOIN product P ON L.model = P.model
GROUP BY maker

--3
SELECT AVG(SPEED) AS AVG_SPEED
FROM LAPTOP
WHERE PRICE > 1000

--4
SELECT maker, AVG(PRICE) AS AVG_PRICE
FROM PC JOIN product P ON PC.model = P.model
GROUP BY maker
HAVING MAKER = 'A'

--5
SELECT MAKER, AVG(PRICE) AS AVG_PRICE
FROM product P JOIN
(SELECT model, price FROM PC
UNION ALL
SELECT model, price FROM laptop) AS PCLAPTOP
ON P.model = PCLAPTOP.model
GROUP BY MAKER
HAVING MAKER = 'B'

--6
SELECT SPEED, AVG(PRICE) AS AVG_PRICE
FROM PC
GROUP BY SPEED

--7
SELECT MAKER, COUNT(*) AS NUMBER_OF_PC
FROM PC JOIN product P ON PC.model = P.model
GROUP BY MAKER
HAVING COUNT(*) >= 3

--8
SELECT MAKER, MAX(PRICE) AS MAX_PRICE
FROM PC JOIN product P ON PC.model = P.model
GROUP BY MAKER
HAVING MAX(PRICE) >= ALL (SELECT PRICE FROM PC)

--9
SELECT SPEED, AVG(PRICE) AS AVG_PRICE
FROM PC
GROUP BY SPEED
HAVING SPEED > 800

--10
SELECT MAKER, AVG(HD) AS AVG_HD
FROM PC JOIN product P ON PC.model = P.model
WHERE MAKER IN
(SELECT MAKER
FROM PRINTER PR JOIN product P ON PR.model = P.model)
GROUP BY MAKER


use ships;
--1
SELECT COUNT(CLASS) AS N0_CLASSES
FROM CLASSES
WHERE TYPE = 'bb'

--2
SELECT CLASS, AVG(NUMGUNS) AS AVG_GUNS
FROM CLASSES
WHERE TYPE = 'bb'
GROUP BY CLASS

--3
SELECT AVG(NUMGUNS) AS AVG_GUNS
FROM CLASSES
WHERE TYPE = 'bb'

--4
SELECT CLASS, MIN(LAUNCHED) AS FIRST_YEAR, MAX(LAUNCHED) AS LAST_YEAR
FROM SHIPS
GROUP BY CLASS

--5
SELECT CLASS, COUNT(*) AS NO_SUNK
FROM SHIPS S JOIN OUTCOMES O ON S.NAME = O.SHIP
WHERE RESULT = 'sunk'
GROUP BY CLASS

--6
SELECT CLASS, COUNT(*) AS NO_SUNK
FROM SHIPS S JOIN OUTCOMES O ON S.NAME = O.SHIP
WHERE RESULT = 'sunk'
AND CLASS IN
(SELECT CLASS FROM SHIPS GROUP BY CLASS HAVING COUNT(CLASS) > 2)
GROUP BY CLASS

--7
SELECT C.COUNTRY, AVG(BORE) AS AVG_BORE
FROM CLASSES C JOIN SHIPS S ON C.CLASS = S.CLASS
GROUP BY C.COUNTRY
